name: Deploy static content

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "netlify"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: netlify-prod
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Build site with Nix
        run: nix build .

      - name: Move built files
        run: |
          mkdir -p /home/runner/work/_temp/_github_home/build
          cp -r ./result/* /home/runner/work/_temp/_github_home/build
          cp ./netlify.toml /home/runner/work/_temp/_github_home/build
          
      - name: Deploy to Netlify (prod)
        uses: danakim/gh-action-deploy-netlify@master
        with:
          AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          DEPLOY_PROD: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload result directory from nix build
          path: './result'
